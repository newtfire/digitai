
// ==== Generated by XSLT Transformation ====

// 1. SETUP: Create Constraints for Performance and Data Integrity
 CREATE CONSTRAINT IF NOT EXISTS FOR (d:Document) REQUIRE d.title IS UNIQUE;
 CREATE CONSTRAINT IF NOT EXISTS FOR (s:Section) REQUIRE s.id IS UNIQUE;
 CREATE CONSTRAINT IF NOT EXISTS FOR (spec:Specification) REQUIRE spec.name IS UNIQUE;

// 2. LOAD AND PROCESS: Load the JSON and start the recursive import
CALL apoc.load.json("https://raw.githubusercontent.com/newtfire/digitai/refs/heads/ebb-json/RAG/sandbox/sandboxTest.json") YIELD value as doc_data

// Create the root Document node
MERGE (doc:Document {title: 'SOURCE XML AS BASIS FOR A KNOWLEDGE GRAPH'})


  WITH  doc ,  doc_data 
  FOREACH ( part_data_1  IN  doc_data . CONTAINS_PARTS  | 
  	 MERGE (part:Part {name: part_data_1.PART}) SET part.sequence = part_data_1.SEQUENCE 
  	 MERGE ( doc )-[: HAS_PART ]->(part) 
 	 WITH  part ,  part_data_1 
 	 FOREACH ( chapter_data_2  IN  part_data_1 . CONTAINS_CHAPTERS  | 
 	 	 MERGE (chapter:Chapter {chapter_id: chapter_data_2.ID}) SET chapter.sequence = chapter_data_2.SEQUENCE, chapter.title = chapter_data_2.CHAPTER, chapter.links = [x IN chapter_data_2.RELATES_TO WHERE x IS NOT NULL | x.ID] 
 	 	 MERGE ( part )-[: HAS_CHAPTER ]->( chapter ) 
 		 WITH  chapter ,  chapter_data_2 
 		 FOREACH ( section_1_data_3  IN  chapter_data_2 . CONTAINS_SECTIONS  | 
 		 	 MERGE (section_1:Section_1 {section_id: section_1_data_3.ID}) SET section_1.sequence = section_1_data_3.SEQUENCE, section_1.title = section_1_data_3.SECTION, section_1.links = [x IN section_1_data_3.RELATES_TO WHERE x IS NOT NULL | x.ID] 
 		 	 MERGE ( chapter )-[: HAS_SECTION ]->( section_1 ) 
 			 WITH  section_1 ,  section_1_data_3 
 			 FOREACH ( section_2_data_4  IN  section_1_data_3 . CONTAINS_SUBSECTIONS  | 
 			 	 MERGE (section_2:Section_2 {section_id: section_2_data_4.ID}) SET section_2.sequence = section_2_data_4.SEQUENCE, section_2.title = section_2_data_4.SECTION, section_2.links = [x IN section_2_data_4.RELATES_TO WHERE x IS NOT NULL | x.ID] 
 			 	 MERGE ( section_1 )-[: HAS_SUBSECTION ]->( section_2 ) 
 				 WITH  section_2 ,  section_2_data_4 
 				 FOREACH ( section_3_data_5  IN  section_2_data_4 . CONTAINS_SUBSECTIONS  | 
 				 	 MERGE (section_3:Section_3 {section_id: section_3_data_5.ID}) SET section_3.sequence = section_3_data_5.SEQUENCE, section_3.title = section_3_data_5.SECTION, section_3.links = [x IN section_3_data_5.RELATES_TO.SECTION WHERE x IS NOT NULL | x.ID] 
 				 	 MERGE ( section_2 )-[: HAS_SUBSECTION ]->( section_3 ) 
 					 WITH  section_3 ,  section_3_data_5 
 					 FOREACH ( paragraph_data_6  IN  section_3_data_5 . CONTAINS_PARAS  | 
 					 	 MERGE (paragraph:Para {parastring: paragraph_data_6.PARASTRING}) SET paragraph.files_mentioned = [x IN paragraph_data_6.TEI_ENCODING_DISCUSSED.FILES_MENTIONED WHERE x IS NOT NULL | x.FILE], paragraph.parameter_entities_mentioned = [x IN paragraph_data_6.TEI_ENCODING_DISCUSSED.PES_MENTIONED WHERE x IS NOT NULL | x.PE], paragraph.elements_mentioned = [x IN paragraph_data_6.TEI_ENCODING_DISCUSSED.ELEMENTS_MENTIONED WHERE x IS NOT NULL | x.ELEMENT_NAME], paragraph.attributes_mentioned = [x IN paragraph_data_6.TEI_ENCODING_DISCUSSED.ATTRIBUTES_MENTIONED WHERE x IS NOT NULL | x.ATTRIBUTE_NAME], paragraph.sequence = paragraph_data_6.SEQUENCE, paragraph.frags_mentioned = [x IN paragraph_data_6.TEI_ENCODING_DISCUSSED.FRAGS_MENTIONED WHERE x IS NOT NULL | x.FRAG], paragraph.ns_mentioned = [x IN paragraph_data_6.TEI_ENCODING_DISCUSSED.NSS_MENTIONED WHERE x IS NOT NULL | x.NS], paragraph.classes_mentioned = [x IN paragraph_data_6.TEI_ENCODING_DISCUSSED.CLASSES_MENTIONED WHERE x IS NOT NULL | x.CLASS], paragraph.modules_mentioned = [x IN paragraph_data_6.TEI_ENCODING_DISCUSSED.MODULES_MENTIONED WHERE x IS NOT NULL | x.MODULE], paragraph.macros_mentioned = [x IN paragraph_data_6.TEI_ENCODING_DISCUSSED.MACROS_MENTIONED WHERE x IS NOT NULL | x.MACRO], paragraph.speclist_links = [x IN paragraph_data_6.TEI_ENCODING_DISCUSSED.CONTAINS_SPECLISTS.SPECLIST WHERE x IS NOT NULL | x.ID], paragraph.relaxng_mentioned = [x IN paragraph_data_6.TEI_ENCODING_DISCUSSED.RNGS_MENTIONED WHERE x IS NOT NULL | x.RNG], paragraph.datatypes_mentioned = [x IN paragraph_data_6.TEI_ENCODING_DISCUSSED.DATATYPES_MENTIONED WHERE x IS NOT NULL | x.DATATYPE], paragraph.links = [x IN paragraph_data_6.RELATES_TO.SECTION WHERE x IS NOT NULL | x.ID], paragraph.parameter_entities_mentioned_ge = [x IN paragraph_data_6.TEI_ENCODING_DISCUSSED.PES_MENTIONED WHERE x IS NOT NULL | x.GE], paragraph.schemas_mentioned = [x IN paragraph_data_6.TEI_ENCODING_DISCUSSED.SCHEMAS_MENTIONED WHERE x IS NOT NULL | x.SCHEMA] 
 					 	 MERGE ( section_3 )-[: HAS_PARAGRAPH ]->( paragraph ) 
 						 WITH  paragraph ,  paragraph_data_6 
 						 FOREACH ( example_data_7  IN  paragraph_data_6 . TEI_ENCODING_DISCUSSED.CONTAINS_EXAMPLES  | 
 						 	 MERGE (example:Example {example: example_data_7.EXAMPLE}) SET example.language = example_data_7.LANGUAGE 
 						 	 MERGE ( paragraph )-[: HAS_EXAMPLE ]->( example ) 
 							 WITH  example ,  example_data_7 
 							 FOREACH ( terminal_paragraph_data_8  IN  example_data_7 . CONTAINS_END_PARAS  | 
 							 	 MERGE (terminal_paragraph:Terminalpara {parastring: terminal_paragraph_data_8.PARASTRING}) SET terminal_paragraph.files_mentioned = [x IN terminal_paragraph_data_8.TEI_ENCODING_DISCUSSED.FILES_MENTIONED WHERE x IS NOT NULL | x.FILE], terminal_paragraph.parameter_entities_mentioned = [x IN terminal_paragraph_data_8.TEI_ENCODING_DISCUSSED.PES_MENTIONED WHERE x IS NOT NULL | x.PE], terminal_paragraph.elements_mentioned = [x IN terminal_paragraph_data_8.TEI_ENCODING_DISCUSSED.ELEMENTS_MENTIONED WHERE x IS NOT NULL | x.ELEMENT_NAME], terminal_paragraph.attributes_mentioned = [x IN terminal_paragraph_data_8.TEI_ENCODING_DISCUSSED.ATTRIBUTES_MENTIONED WHERE x IS NOT NULL | x.ATTRIBUTE_NAME], terminal_paragraph.sequence = terminal_paragraph_data_8.SEQUENCE, terminal_paragraph.frags_mentioned = [x IN terminal_paragraph_data_8.TEI_ENCODING_DISCUSSED.FRAGS_MENTIONED WHERE x IS NOT NULL | x.FRAG], terminal_paragraph.ns_mentioned = [x IN terminal_paragraph_data_8.TEI_ENCODING_DISCUSSED.NSS_MENTIONED WHERE x IS NOT NULL | x.NS], terminal_paragraph.classes_mentioned = [x IN terminal_paragraph_data_8.TEI_ENCODING_DISCUSSED.CLASSES_MENTIONED WHERE x IS NOT NULL | x.CLASS], terminal_paragraph.modules_mentioned = [x IN terminal_paragraph_data_8.TEI_ENCODING_DISCUSSED.MODULES_MENTIONED WHERE x IS NOT NULL | x.MODULE], terminal_paragraph.macros_mentioned = [x IN terminal_paragraph_data_8.TEI_ENCODING_DISCUSSED.MACROS_MENTIONED WHERE x IS NOT NULL | x.MACRO], terminal_paragraph.speclist_links = [x IN terminal_paragraph_data_8.TEI_ENCODING_DISCUSSED.CONTAINS_SPECLISTS.SPECLIST WHERE x IS NOT NULL | x.ID], terminal_paragraph.relaxng_mentioned = [x IN terminal_paragraph_data_8.TEI_ENCODING_DISCUSSED.RNGS_MENTIONED WHERE x IS NOT NULL | x.RNG], terminal_paragraph.datatypes_mentioned = [x IN terminal_paragraph_data_8.TEI_ENCODING_DISCUSSED.DATATYPES_MENTIONED WHERE x IS NOT NULL | x.DATATYPE], terminal_paragraph.links = [x IN terminal_paragraph_data_8.RELATES_TO.SECTION WHERE x IS NOT NULL | x.ID], terminal_paragraph.parameter_entities_mentioned_ge = [x IN terminal_paragraph_data_8.TEI_ENCODING_DISCUSSED.PES_MENTIONED WHERE x IS NOT NULL | x.GE], terminal_paragraph.schemas_mentioned = [x IN terminal_paragraph_data_8.TEI_ENCODING_DISCUSSED.SCHEMAS_MENTIONED WHERE x IS NOT NULL | x.SCHEMA] 
 							 	 MERGE ( example )-[: HAS_END_PARAGRAPH ]->( terminal_paragraph ) 
 							 ) 
 						 )