
// ==== Generated by XSLT Transformation ====

// 1. SETUP: Create Constraints for Performance and Data Integrity
 CREATE CONSTRAINT IF NOT EXISTS FOR (d:Document) REQUIRE d.title IS UNIQUE;
 CREATE CONSTRAINT IF NOT EXISTS FOR (s:Section) REQUIRE s.id IS UNIQUE;
 CREATE CONSTRAINT IF NOT EXISTS FOR (spec:Specification) REQUIRE spec.name IS UNIQUE;

// 2. LOAD AND PROCESS: Load the JSON and start the recursive import
CALL apoc.load.json("file:///sandboxTest.json") YIELD value

// Create the root Document node
MERGE (doc:Document {title: 'SOURCE XML AS BASIS FOR A KNOWLEDGE GRAPH'})

MERGE (doc:Document {title: value.DOC_TITLE}) 
 
 
	FOREACH (part IN CONTAINS_PARTS.HAS_PART |
	
    
       NOW PROCESSING front which has a parent cypher variable of doc
        AND WE NEED TO PROCESS: part
    
       NOW PROCESSING body which has a parent cypher variable of doc
        AND WE NEED TO PROCESS: part